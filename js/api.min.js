'use strict';(function(){var a=angular.module('jsConvertApp');a.controller('MainController',['$scope',function(b){b.apiConvertString=[{name:'camelCase',method:'toCamelCase',package:'js-camelcase',description:'Return as a string with the separators denoted by having the next letter capitalized.',code:'console.log(jsConvert.toCamelCase(\'param-case\')); // paramCase'},{name:'snake_Case',method:'toSnakeCase',package:'js-snakecase',description:'Return as a lower case, underscore separated string.',code:'console.log(jsConvert.toSnakeCase(\'camelCase\')); // camel_case'},{name:'PascalCase',method:'toPascalCase',package:'js-pascalcase',description:'Return as a string denoted in the same fashion as camelCase, but with the first letter also capitalized.',code:'console.log(jsConvert.toPascalCase(\'param-case\')); // ParamCase'},{name:'dot.case',method:'toDotCase',package:'js-dotcase',description:'Return as a lower case, period separated string.',code:'console.log(jsConvert.toDotCase(\'Title Case\')); // title.case'},{name:'path/case',method:'toPathCase',package:'js-pathcase',description:'Return as a lower case, slash separated string.',code:'console.log(jsConvert.toPathCase(\'camelCase\')); // camel/case'},{name:'text case',method:'toTextCase',package:'js-textcase',description:'Return the string without any casing (lower case, space separated).',code:'console.log(jsConvert.toTextCase(\'camelCase\')); // camel case'},{name:'Sentence case',method:'toSentenceCase',package:'js-sentencecase',description:'Return as a lower case, space separated string with the first letter upper case.',code:'console.log(jsConvert.toSentenceCase(\'camelCase\')); // Camel case'},{name:'Header Case',method:'toHeaderCase',package:'js-headercase',description:'Return as a space separated string with the first character of every word upper cased.',code:'console.log(jsConvert.toHeaderCase(\'param-case\')); // Param Case'},{name:'lowercase',method:'toUpperCase',description:'Similar to <code>String.prototype.toLowerCase()</code>',code:'console.log(jsConvert.toLowerCase(\'Title Case\')); // title case'},{name:'UPPERCASE',method:'toLowerCase',description:'Similar to <code>String.prototype.toUpperCase()</code>',code:'console.log(jsConvert.toUpperCase(\'param-case\')); // PARAM-CASE'}],b.apiConvertKeysObject=[{name:'lowerKeys',method:'lowerKeys',package:'lowercase-keys-object',description:'Return new object which keys is lowercase format.',code:'jsConvert.lowerKeys({\n  camelCase: 1,\n  UPPERCASE: 2,\n  lowercase: 3,\n  snake_case: 4,\n  PascalCase: 5,\n  \'Title Case\': 6,\n  \'dot.case\': 7,\n  \'param-case\': 8,\n  \'Sentence case\': 9,\n  \'path/case\': 10,\n  \'Header-Case\': 11\n});',output:'{\n  camelcase: 1,\n  uppercase: 2,\n  lowercase: 3,\n  snake_case: 4,\n  pascalcase: 5,\n  \'title case\': 6,\n  \'dot.case\': 7,\n  \'param-case\': 8,\n  \'sentence case\': 9,\n  \'path/case\': 10,\n  \'header-case\': 11\n}'},{name:'upperKeys',method:'upperKeys',package:'uppercase-keys-object',description:'Return new object which keys is uppercase format.',code:'jsConvert.upperKeys({\n  camelCase: 1,\n  UPPERCASE: 2,\n  lowercase: 3,\n  snake_case: 4,\n  PascalCase: 5,\n  \'Title Case\': 6,\n  \'dot.case\': 7,\n  \'param-case\': 8,\n  \'Sentence case\': 9,\n  \'path/case\': 10,\n  \'Header-Case\': 11\n});',output:'{\n  CAMELCASE: 1,\n  UPPERCASE: 2,\n  LOWERCASE: 3,\n  SNAKE_CASE: 4,\n  PASCALCASE: 5,\n  \'TITLE CASE\': 6,\n  \'DOT.CASE\': 7,\n  \'PARAM-CASE\': 8,\n  \'SENTENCE CASE\': 9,\n  \'PATH/CASE\': 10,\n  \'HEADER-CASE\': 11\n}'},{name:'camelKeys',method:'camelKeys',package:'camelcase-keys-object',description:'Return new object which keys is camelcase format.',code:'jsConvert.camelKeys({\n  camelCase: 1,\n  UPPERCASE: 2,\n  lowercase: 3,\n  snake_case: 4,\n  PascalCase: 5,\n  \'Title Case\': 6,\n  \'dot.case\': 7,\n  \'param-case\': 8,\n  \'Sentence case\': 9,\n  \'path/case\': 10,\n  \'Header-Case\': 11\n});',output:'{\n  camelCase: 1,\n  uppercase: 2,\n  lowercase: 3,\n  snakeCase: 4,\n  pascalCase: 5,\n  titleCase: 6,\n  dotCase: 7,\n  paramCase: 8,\n  sentenceCase: 9,\n  pathCase: 10,\n  headerCase: 11\n}'},{name:'snakeKeys',method:'snakeKeys',package:'snakecase-keys-object',description:'Return new object which keys is snakecase format.',code:'jsConvert.snakeKeys({\n  camelCase: 1,\n  UPPERCASE: 2,\n  lowercase: 3,\n  snake_case: 4,\n  PascalCase: 5,\n  \'Title Case\': 6,\n  \'dot.case\': 7,\n  \'param-case\': 8,\n  \'Sentence case\': 9,\n  \'path/case\': 10,\n  \'Header-Case\': 11\n});',output:'{\n  camel_case: 1,\n  uppercase: 2,\n  lowercase: 3,\n  snake_case: 4,\n  pascal_case: 5,\n  title_case: 6,\n  dot_case: 7,\n  param_case: 8,\n  sentence_case: 9,\n  path_case: 10,\n  header_case: 11\n}'},{name:'pascalKeys',method:'pascalKeys',package:'pascalcase-keys-object',description:'Return new object which keys is pascalcase format.',code:'jsConvert.pascalKeys({\n  camelCase: 1,\n  UPPERCASE: 2,\n  lowercase: 3,\n  snake_case: 4,\n  PascalCase: 5,\n  \'Title Case\': 6,\n  \'dot.case\': 7,\n  \'param-case\': 8,\n  \'Sentence case\': 9,\n  \'path/case\': 10,\n  \'Header-Case\': 11\n});',output:'{\n  CamelCase: 1,\n  Uppercase: 2,\n  Lowercase: 3,\n  SnakeCase: 4,\n  PascalCase: 5,\n  TitleCase: 6,\n  DotCase: 7,\n  ParamCase: 8,\n  SentenceCase: 9,\n  PathCase: 10,\n  HeaderCase: 11\n}'}]}])})();
